<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lerko Blog</title>
    <description>迷茫</description>
    <link>https://chenyingqiao.github.io//</link>
    <atom:link href="https://chenyingqiao.github.io//feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Fri, 23 Dec 2016 19:27:36 +0800</pubDate>
    <lastBuildDate>Fri, 23 Dec 2016 19:27:36 +0800</lastBuildDate>
    <generator>Jekyll v3.1.6</generator>
    
      <item>
        <title>Mysql主从配置docker</title>
        <description>
&lt;hr /&gt;
&lt;p&gt;layout:     post
title:      “mysql 主从复制”
subtitle:   “使用Docker创建本地mysql主从,实现主从分离”
date:       2016-12-15
author:     “Lerko”
header-img: “img/post-bg-unix-linux.jpg”
catalog: true
tags:
    - database
—&lt;/p&gt;

&lt;h2 id=&quot;docker&quot;&gt;docker创建环境&lt;/h2&gt;

&lt;h3 id=&quot;dockermysql&quot;&gt;使用docker创建两个mysql容器&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;docker 镜像可以使用网易蜂巢的mysql的docker镜像
MYSQL_ROOT_PASSWORD是设置docker容器中mysql的root账户的密码&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;docker run --name mysql-master -v /home/docker/file/:/home/ -e MYSQL_ROOT_PASSWORD=111111 -d mysql
docker run --name mysql-slave -v /home/docker/file/:/home/ -e MYSQL_ROOT_PASSWORD=111111 -d mysql
#这里一般都要挂载一下外部目录这样docker才能和外部机器共享文件
&lt;/div&gt;

&lt;h3 id=&quot;section&quot;&gt;今日容器之后需要准备的事情&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;由于镜像中没有提供vim 而且 镜像中的源是使用ubuntu的官方源 
如果我们没有使用科学上网apt-get update 将会非常慢
我使用的是deepin 我就吧deepin的源替换进去&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;# 拷贝deepin的源
sudo cp /etc/apt/source.list /home/docker/file/
#进入容器
docker exec -it mysql-master bash
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;# 进入容器之后 我们从共享的文件目录获取deepin的源 然后覆盖到容器中的源
cat /home/source.list &amp;gt; /etc/apt/source.list
apt-get update
apt-get upgrade
apt-get install vim
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;mysql-slave 也是同样的更新一下源&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;mysql&quot;&gt;开始配置mysql主从&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;每台mysql主机都有master和slave的概念
其实他是两个工作线程&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;将Mysql的数据分布到多个系统上去，这种分布的机制，是通过将Mysql的某一台主机的数据复制到其&amp;gt;它主机（slaves）上，并重新执行一遍来实现的。复制过程中一个服务器充当主服务器，而一个或多个其它服务器充当从服务器。主服务器将更新写入二进制日志文件，并维护文件的一个索引以跟踪日志循环。这些日志可以记录发送到从服务器的更新。当一个从服务器连接主服务器时，它通知主服务器从服务器在日志中读取的最后一次成功更新的位置。从服务器接收从那时起发生的任何更新，然后封锁并等待主服务器通知新的更新。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;请注意当你进行复制时，所有对复制中的表的更新必须在主服务器上进行。否则，你必须要小心，以避免用户对主服务器上的表进行的更新与对从服务器上的表所进行的更新之间的冲突。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;复制过程有一个很重要的限制——复制在slave上是串行化的，也就是说master上的并行更新操作不能在slave上并行操作。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;section-1&quot;&gt;从添加用户开始&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;我们需要添加一个mysql用户让slave来使用&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;mysql-master 容器&lt;/strong&gt;
```shell
mysql -u root -p
#输入密码后进入mysql&lt;/p&gt;

&lt;p&gt;#创建一个用户名为lerko密码为111111的可以使用任意ip访问的用户
create user  ‘lerko’@’%’ IDENTIFIED BY ‘111111’;&lt;/p&gt;

&lt;h1 id=&quot;curd&quot;&gt;为用户开启curd权限&lt;/h1&gt;
&lt;p&gt;# 如果没有开启的话会导致 Slave_IO_Running :no
# 权限有select,insert,update,delete,create,drop, all privilege[表示给所有的权限]
#命令格式: &lt;code class=&quot;highlighter-rouge&quot;&gt;grant 权限1,权限2,…权限n on 数据库名称.表名称 to 用户名@用户地址 identified by ‘连接口令’;&lt;/code&gt;
grant select,insert,update,delete,create,drop on &lt;em&gt;.&lt;/em&gt; to lerko@’%’ identified by ‘111111’;
```&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;另外如果你没有开启权限就吧从库链接主库了
你要重新链接一次 因为主库的Position会变化
重新链接要使用stop slave结束丛库的slave&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;section-2&quot;&gt;开启主和从服务器的二进制日志&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;mysql-master&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;# 修改mysql的配置文件开启二进制日志
vim /etc/mysql/my.cnf
#添加如下内容
[mysqld]
log-bin=mysql-bin   //[必须]启用二进制日志
server-id=1      //[必须]服务器唯一ID，默认是1，一般取IP最后一段
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;mysql-slave&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;# 修改mysql的配置文件开启二进制日志
vim /etc/mysql/my.cnf
#添加如下内容
[mysqld]
log-bin=mysql-bin   //[必须]启用二进制日志
server-id=1      //[必须]服务器唯一ID，默认是1，一般取IP最后一段
&lt;/div&gt;

&lt;h3 id=&quot;mysql-1&quot;&gt;重启两个容器的mysql进程&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;这个会直接吧容器给停了  之后再start一下容器就行&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;service mysql restart;
&lt;/div&gt;

&lt;h3 id=&quot;masterslave&quot;&gt;查看主库的master以及从库的slave&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;进入mysql&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;show master status；
+------------------+----------+--------------+------------------+-------------------+
| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |
+------------------+----------+--------------+------------------+-------------------+
| mysql-bin.000001 |      681 |              |                  |                   |
+------------------+----------+--------------+------------------+-------------------+
&lt;/div&gt;

&lt;h3 id=&quot;master&quot;&gt;从库把master链接到主库&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;这里我们只需要一个命令就可以&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;span class=&quot;c&quot;&gt;# master_log_file =&amp;gt; 指向胡二进制文件&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# master_log_pos =&amp;gt; 二进制文件胡读取位置&lt;/span&gt;
change master to &lt;span class=&quot;nv&quot;&gt;master_host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;172.17.0.2&#39;&lt;/span&gt;,master_user&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;lerko&#39;&lt;/span&gt;,master_password&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;111111&#39;&lt;/span&gt;,master_log_file&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;mysql-bin.000001&#39;&lt;/span&gt;,master_log_pos&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;681;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;主从ip可以使用&lt;code class=&quot;highlighter-rouge&quot;&gt;docker inspect [容器id]&lt;/code&gt;来查看&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;section-3&quot;&gt;去从服务器查看同步状态&lt;/h3&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;span class=&quot;c&quot;&gt;# 进入mysql命令行&lt;/span&gt;
show slave status&lt;span class=&quot;se&quot;&gt;\G&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;***************************&lt;/span&gt; 1. row &lt;span class=&quot;k&quot;&gt;***************************&lt;/span&gt;
               Slave_IO_State: Waiting &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;master to send event
                  Master_Host: 172.17.0.2
                  Master_User: lerko
                  Master_Port: 3306
                Connect_Retry: 60
              Master_Log_File: mysql-bin.000001
          Read_Master_Log_Pos: 1045
               Relay_Log_File: 68903b92c3ea-relay-bin.000003
                Relay_Log_Pos: 320
        Relay_Master_Log_File: mysql-bin.000001
             Slave_IO_Running: Yes &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;这个必须要yes]
            Slave_SQL_Running: Yes &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;这个必须要yes]
              Replicate_Do_DB: 
          Replicate_Ignore_DB: 
           Replicate_Do_Table: 
       Replicate_Ignore_Table: 
      Replicate_Wild_Do_Table: 
  Replicate_Wild_Ignore_Table: 
                   Last_Errno: 0
                   Last_Error: 
                 Skip_Counter: 0
          Exec_Master_Log_Pos: 1045
              Relay_Log_Space: 534
              Until_Condition: None
               Until_Log_File: 
                Until_Log_Pos: 0
           Master_SSL_Allowed: No
           Master_SSL_CA_File: 
           Master_SSL_CA_Path: 
              Master_SSL_Cert: 
            Master_SSL_Cipher: 
               Master_SSL_Key: 
        Seconds_Behind_Master: 0 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;这个可以查看主从是否延迟]
Master_SSL_Verify_Server_Cert: No
                Last_IO_Errno: 0
                Last_IO_Error: 
               Last_SQL_Errno: 0
               Last_SQL_Error: 
  Replicate_Ignore_Server_Ids: 
             Master_Server_Id: 1
                  Master_UUID: 38487393-c72a-11e6-a1c8-0242ac110002
             Master_Info_File: /var/lib/mysql/master.info
                    SQL_Delay: 0
          SQL_Remaining_Delay: NULL
      Slave_SQL_Running_State: Slave has &lt;span class=&quot;nb&quot;&gt;read &lt;/span&gt;all relay log; waiting &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;more updates
           Master_Retry_Count: 86400
                  Master_Bind: 
      Last_IO_Error_Timestamp: 
     Last_SQL_Error_Timestamp: 
               Master_SSL_Crl: 
           Master_SSL_Crlpath: 
           Retrieved_Gtid_Set: 
            Executed_Gtid_Set: 
                Auto_Position: 0
         Replicate_Rewrite_DB: 
                 Channel_Name: 
           Master_TLS_Version: 
1 row &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.00 sec&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

ERROR: 
No query specified

&lt;/div&gt;

</description>
        <pubDate>Fri, 23 Dec 2016 00:00:00 +0800</pubDate>
        <link>https://chenyingqiao.github.io//2016/12/23/mysql%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AEdocker/</link>
        <guid isPermaLink="true">https://chenyingqiao.github.io//2016/12/23/mysql%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AEdocker/</guid>
        
        
      </item>
    
      <item>
        <title>nginx服务器配置</title>
        <description>&lt;h2 id=&quot;section&quot;&gt;首先找到配置文件&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;服务器是centos的环境
使用的是OneinStack这个php，java的运行环境一键安装工具&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;这个工具里面集成了一些列的sh脚本工具可以一键使用&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;一般配置文件的存放路径以及nginx的主要程序存放路径&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;server配置（nginx.conf） /usr/local/nginx/conf&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ubuntu一般在 /etc/nginx/&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
主程序                             /etc/init.d/ngin

科普centos的一些基本命令
yum ：安装软件包 yum install &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;软件包名称]
rpm ：软件包管理工具  查看说有软件包 rpm -qa |grep httpd ---&amp;gt;后面是过滤选项

&lt;/div&gt;

&lt;h2 id=&quot;section-1&quot;&gt;现在是配置文件的内容&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;nginx 主要的配置文件nginx.conf&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;user www www;
worker_processes auto;

error_log /data/wwwlogs/error_nginx.log crit;
pid /var/run/nginx.pid;
worker_rlimit_nofile 51200;

events &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    use epoll;
    worker_connections 51200;
    multi_accept on;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

http &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    include mime.types;
    default_type application/octet-stream;
    server_names_hash_bucket_size 128;
    client_header_buffer_size 32k;
    large_client_header_buffers 4 32k;
    client_max_body_size 1024m;
    sendfile on;
    tcp_nopush on;
    keepalive_timeout 120;
    server_tokens off;
    tcp_nodelay on;
    
    fastcgi_connect_timeout 300;
    fastcgi_send_timeout 300;
    fastcgi_read_timeout 300;
    fastcgi_buffer_size 64k;
    fastcgi_buffers 4 64k;
    fastcgi_busy_buffers_size 128k;
    fastcgi_temp_file_write_size 128k;

    &lt;span class=&quot;c&quot;&gt;#Gzip Compression&lt;/span&gt;
    gzip on;
    gzip_buffers 16 8k;
    gzip_comp_level 6;
    gzip_http_version 1.1;
    gzip_min_length 256;
    gzip_proxied any;
    gzip_vary on;
    gzip_types
        text/xml application/xml application/atom+xml application/rss+xml application/xhtml+xml image/svg+xml
        text/javascript application/javascript application/x-javascript
        text/x-json application/json application/x-web-app-manifest+json
        text/css text/plain text/x-component
        font/opentype application/x-font-ttf application/vnd.ms-fontobject
        image/x-icon;
    gzip_disable &lt;span class=&quot;s2&quot;&gt;&quot;MSIE [1-6]&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;(?!.*SV1)&quot;&lt;/span&gt;;

    &lt;span class=&quot;c&quot;&gt;#If you have a lot of static files to serve through Nginx then caching of the files&#39; metadata (not the actual files&#39; contents) can save some latency.&lt;/span&gt;
    open_file_cache &lt;span class=&quot;nv&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1000 &lt;span class=&quot;nv&quot;&gt;inactive&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

&lt;span class=&quot;c&quot;&gt;######################## default ############################&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#默认的代理配置（反向代理是nginx的一个重要功能）&lt;/span&gt;
    server &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    listen 80;
    server_name 121.42.48.14;
    access_log /data/wwwlogs/access_nginx.log combined;
    root /data/wwwroot/default;
    index index.html index.htm index.php;
    location /nginx_status &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        deny all;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    location ~ &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;^/]&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;php&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;/|&lt;span class=&quot;nv&quot;&gt;$)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;#fastcgi_pass remote_php_ip:9000;&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;#这里对接fastcgi接口  &lt;/span&gt;
        fastcgi_pass unix:/dev/shm/php-cgi.sock;
        fastcgi_index index.php;
        include fastcgi.conf;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    location ~ .&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;gif|jpg|jpeg|png|bmp|swf|flv|ico&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        expires 30d;
        access_log off;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    location ~ .&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;js|css&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;?&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        expires 7d;
        access_log off;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;########################## vhost #############################&lt;/span&gt;
    include vhost/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.conf; &lt;span class=&quot;c&quot;&gt;#这里包含了其他文件加里面的配置文件&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;/div&gt;

&lt;h3 id=&quot;apache-&quot;&gt;附带我本机与apache共存的配置 （其实就改了一下端口）&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;端口更改需要service nginx restart一下进程&lt;/code&gt;
```shell
server {
    listen 8080 default_server;
    listen [::]:8080 default_server;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;root /var/www/Nginx;

# 这里需要加index.php 如果你开启了php的支持
index index.html index.php index.htm index.nginx-debian.html;
server_name _;
#location字段需要深入学习
location / {
    try_files $uri $uri/ =404;
}
location ~ \.php$ {
    include snippets/fastcgi-php.conf;
    fastcgi_pass unix:/var/run/php5-fpm.sock;
} }
&lt;/div&gt;

&lt;p&gt;```&lt;/p&gt;

&lt;h2 id=&quot;fastcgi&quot;&gt;科普一下fastcgi&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;Nginx不支持对外部程序的直接调用或者解析，所有的外部程序（包括PHP）必须通过FastCGI接口来调用。
FastCGI接口在Linux下是socket（这个socket可以是文件socket，也可以是ip socket）。
为了调用CGI程序，还需要一个FastCGI的wrapper（wrapper可以理解为用于启动另一个程序的程序），
这个wrapper绑定在某个固定socket上，如端口或者文件socket。当Nginx将CGI请求发送给这个socket的时候，
通过FastCGI接口，wrapper接收到请求，然后派生出一个新的线程，
这个线程调用解释器或者外部程序处理脚本并读取返回数据；
接着，wrapper再将返回的数据通过FastCGI接口，
沿着固定的socket传递给Nginx；最后，Nginx将返回的数据发送给客户端。这就是Nginx+FastCGI的整个运作过程&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;php-fpm&quot;&gt;php-fpm&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;上面说明了fastcgi  php-fpm其实是一个fastcgi的管理器
百度百科上面这样说明的
&lt;code class=&quot;highlighter-rouge&quot;&gt;PHP-FPM是一个PHPFastCGI管理器，是只用于PHP的。&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Sun, 18 Dec 2016 00:00:00 +0800</pubDate>
        <link>https://chenyingqiao.github.io//2016/12/18/nginx%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE/</link>
        <guid isPermaLink="true">https://chenyingqiao.github.io//2016/12/18/nginx%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE/</guid>
        
        <category>server</category>
        
        
      </item>
    
      <item>
        <title>crontab工具的使用</title>
        <description>&lt;h2 id=&quot;crontab&quot;&gt;如何查看crontab是否安装？以及初次使用&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;我们可以铜鼓 crontab -l就可以查看是否crontab这个工具是否有安装&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;crontab -l
如果出现 no crontab for root的话输入
crontab -e
会有如下的选项
no crontab for root - using an empty one

Select an editor.  To change later, run &#39;select-editor&#39;.
  1. /bin/ed
  2. /bin/nano        &amp;lt;---- easiest
  3. /usr/bin/vim.basic
  4. /usr/bin/vim.tiny

Choose 1-4 [2]: 4     ----&amp;gt;我们一般选择的是第4个配置文件

之后我们就可以输入crontab -e对配置文件进行编辑

配置文件默认的内容是一些注释的说明 可以删除

比如我们要创建一个任务 
    {每分钟执行往tmp目录下的某个文件写如当前日期信息}
我们就可以这样写（&amp;gt;&amp;gt;标示的是将data输出的内容保存到文件中）
*/1 * * * * date &amp;gt;&amp;gt; /tmp/crontab_log.txt
&lt;/div&gt;

&lt;p&gt;## crontab -e 中配置文件的配置格式&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;
* * * * * command
第一个× ：分钟 0-59
第二个× ：小时0-23
第三个× ：日期1-31
第四个× ：月份1-12
第五个× ：星期0-7

下面有几个实例
每晚的21:30 从其apache
    30 21 * * *　　service httpd restart
每月1好10号22号的４：４５重启apache
    45 4 1,10,22 * * service httpd result
每月的1-10号de 4:45 重启apache
    45 4 1-10 * * service httpd result
每分钟从启apache
    */2 * * * * service httpd restart
    1-59/2 * * * * service httpd restart
晚上１１点到早上７点之间，每个一小时从启ａｐａｃｈｅ
    0 23-7/1 * * * service httpd restart
每天固定2点时间启动ｐｙｔｈｏｎ脚本
    0 2 * * * python xxx.py

&lt;/div&gt;
</description>
        <pubDate>Sun, 18 Dec 2016 00:00:00 +0800</pubDate>
        <link>https://chenyingqiao.github.io//2016/12/18/linux%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1Crontab%E5%B7%A5%E5%85%B7/</link>
        <guid isPermaLink="true">https://chenyingqiao.github.io//2016/12/18/linux%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1Crontab%E5%B7%A5%E5%85%B7/</guid>
        
        <category>server</category>
        
        
      </item>
    
      <item>
        <title>ps 进程管理命令</title>
        <description>&lt;h2 id=&quot;section&quot;&gt;查看所有用户的进程&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;ps aux&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;ps aux | grep [key]     可以进行筛选&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;section-1&quot;&gt;一些基本用法&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;    ps a 显示现行终端机下的所有程序，包括其他用户的程序。 
    ps -A 显示所有程序。 
    ps c 列出程序时，显示每个程序真正的指令名称，而不包含路径，参数或常驻服务的标示。 
    ps -e 此参数的效果和指定&quot;A&quot;参数相同。 
    ps e 列出程序时，显示每个程序所使用的环境变量。 
    ps f 用ASCII字符显示树状结构，表达程序间的相互关系。 
    ps -H 显示树状结构，表示程序间的相互关系。 
    ps -N 显示所有的程序，除了执行ps指令终端机下的程序之外。 
    ps s 采用程序信号的格式显示程序状况。 
    ps S 列出程序时，包括已中断的子程序资料。 
    ps -t&amp;lt;终端机编号&amp;gt; 指定终端机编号，并列出属于该终端机的程序的状况。 
    ps u 以用户为主的格式来显示程序状况。 
    ps x 显示所有程序，不以终端机来区分。
&lt;/div&gt;

&lt;h4 id=&quot;section-2&quot;&gt;下面是一个例子&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
root         1  0.0  0.0 121764  5856 ?        Ss   09:59   0:01 /sbin/init splash
root         2  0.0  0.0      0     0 ?        S    09:59   0:00 [kthreadd]
root         3  0.0  0.0      0     0 ?        S    09:59   0:00 [ksoftirqd/0]
root         5  0.0  0.0      0     0 ?        S&amp;lt;   09:59   0:00 [kworker/0:0H]
root         7  0.1  0.0      0     0 ?        S    09:59   0:04 [rcu_sched]
root         8  0.0  0.0      0     0 ?        S    09:59   0:00 [rcu_bh]
root         9  0.0  0.0      0     0 ?        S    09:59   0:00 [migration/0]
root        10  0.0  0.0      0     0 ?        S    09:59   0:00 [watchdog/0]
root        11  0.0  0.0      0     0 ?        S    09:59   0:00 [watchdog/1]
root        12  0.0  0.0      0     0 ?        S    09:59   0:00 [migration/1]
root        13  0.0  0.0      0     0 ?        S    09:59   0:00 [ksoftirqd/1]
root        15  0.0  0.0      0     0 ?        S&amp;lt;   09:59   0:00 [kworker/1:0H]
root        16  0.0  0.0      0     0 ?        S    09:59   0:00 [watchdog/2]

USER:该进程属于哪个用户账号的
PID：该进程的进程标识符
%CPU：该进程使用掉的CPU资源百分比
%MEM：该进程所占用掉的物理内存百分比
VSZ：该进程使用掉的虚拟内存量（KB）
RSS：该进程占用的固定的内存量（KB）
TTY：该进程是在哪个终端机上运行，若与终端机无关则显示“？”
STAT：该进程目前的状态，与ps -l显示的S标识相同
START：该进程被触发启动的时间
TIME：该进程实际占用的CPU时间
COMMAND：该进程的实际命令
&lt;/div&gt;

&lt;h4 id=&quot;stat&quot;&gt;关于stat标示列&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;    D    不可中断     Uninterruptible sleep (usually IO)
    R    正在运行，或在队列中的进程
    S    处于休眠状态
    T    停止或被追踪
    Z    僵尸进程
    W    进入内存交换（从内核2.6开始无效）
    X    死掉的进程


    &amp;lt;    高优先级
    N    低优先级
    L    有些页被锁进内存
    s    包含子进程
    +    位于后台的进程组；
    l    多线程，克隆线程  multi-threaded (using CLONE_THREAD, like NPTL pthreads do)
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;想在我运行一个swoole的tcpserver
然后我查看 &lt;code class=&quot;highlighter-rouge&quot;&gt;ps aux |grep php&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;chen@chen-pc:/var/www/html/test/swoole$ *ps auxf | grep php*
root      1069  0.0  0.2 317444 28224 ?        Ss   09:59   0:00 php-fpm: master process (/etc/php5/fpm/php-fpm.conf)
www-data  1115  0.0  0.0 317444  8860 ?        S    09:59   0:00  \_ php-fpm: pool www
www-data  1116  0.0  0.0 317444  8860 ?        S    09:59   0:00  \_ php-fpm: pool www
chen     14639  0.0  0.0  14464  2148 pts/1    S+   11:27   0:00      \_ grep php
chen      7957  0.0  0.1 595384 10916 ?        Ssl  10:44   0:00 php5 -f tcp_server.php
chen      7958  0.0  0.1 299436 10104 ?        S    10:44   0:00  \_ php5 -f tcp_server.php
chen      7963  0.0  0.1 285640 10392 ?        S    10:44   0:00      \_ php5 -f tcp_server.php
chen      7964  0.0  0.1 285640 10392 ?        S    10:44   0:00      \_ php5 -f tcp_server.php
chen      7965  0.0  0.1 285640 10392 ?        S    10:44   0:00      \_ php5 -f tcp_server.php
chen      7966  0.0  0.1 285640 10392 ?        S    10:44   0:00      \_ php5 -f tcp_server.php
chen      7967  0.0  0.1 285640 10392 ?        S    10:44   0:00      \_ php5 -f tcp_server.php
chen      7968  0.0  0.1 285640 12980 ?        S    10:44   0:00      \_ php5 -f tcp_server.php
chen      7969  0.0  0.1 285640 10392 ?        S    10:44   0:00      \_ php5 -f tcp_server.php
chen      7970  0.0  0.1 285640 10396 ?        S    10:44   0:00      \_ php5 -f tcp_server.php
chen      7974  0.0  0.1 595384 10900 ?        Ssl  10:44   0:00 php5 -f tcp_server.php
chen      7975  0.0  0.0 299436 10028 ?        S    10:44   0:00  \_ php5 -f tcp_server.php
chen      7980  0.0  0.1 285640 10348 ?        S    10:44   0:00      \_ php5 -f tcp_server.php
chen      7981  0.0  0.1 285640 10348 ?        S    10:44   0:00      \_ php5 -f tcp_server.php
chen      7982  0.0  0.1 285640 10348 ?        S    10:44   0:00      \_ php5 -f tcp_server.php
chen      7983  0.0  0.1 285640 10348 ?        S    10:44   0:00      \_ php5 -f tcp_server.php
chen      7984  0.0  0.1 285640 10348 ?        S    10:44   0:00      \_ php5 -f tcp_server.php
chen      7985  0.0  0.1 285640 10348 ?        S    10:44   0:00      \_ php5 -f tcp_server.php
chen      7986  0.0  0.1 285640 10348 ?        S    10:44   0:00      \_ php5 -f tcp_server.php
chen      7987  0.0  0.1 285640 10352 ?        S    10:44   0:00      \_ php5 -f tcp_server.php
&lt;/div&gt;

&lt;p&gt;我们可以看到有两个 stat为 Ssl的tcp_server.php的进程&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;因为我不小心运行了两次&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-3&quot;&gt;学习如何杀死进程&lt;/h2&gt;

&lt;h4 id=&quot;kill-&quot;&gt;kill 命令的使用&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;*kill[参数][进程号]*&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;-l  信号，若果不加信号的编号参数，则使用“-l”参数会列出全部的信号名称
-a  当处理当前进程时，不限制命令名和进程号的对应关系
-p  指定kill 命令只打印相关进程的进程号，而不发送任何信号
-s  指定发送信号
-u  指定用户 
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;实例1：列出所有信号名称&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;*kill -l*&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;chen@chen-pc:/var/www/html/test/swoole$ kill -l
 1) SIGHUP   2) SIGINT   3) SIGQUIT  4) SIGILL   5) SIGTRAP
 6) SIGABRT  7) SIGBUS   8) SIGFPE   9) SIGKILL 10) SIGUSR1
11) SIGSEGV 12) SIGUSR2 13) SIGPIPE 14) SIGALRM 15) SIGTERM
16) SIGSTKFLT   17) SIGCHLD 18) SIGCONT 19) SIGSTOP 20) SIGTSTP
21) SIGTTIN 22) SIGTTOU 23) SIGURG  24) SIGXCPU 25) SIGXFSZ
26) SIGVTALRM   27) SIGPROF 28) SIGWINCH    29) SIGIO   30) SIGPWR
31) SIGSYS  34) SIGRTMIN    35) SIGRTMIN+1  36) SIGRTMIN+2  37) SIGRTMIN+3
38) SIGRTMIN+4  39) SIGRTMIN+5  40) SIGRTMIN+6  41) SIGRTMIN+7  42) SIGRTMIN+8
43) SIGRTMIN+9  44) SIGRTMIN+10 45) SIGRTMIN+11 46) SIGRTMIN+12 47) SIGRTMIN+13
48) SIGRTMIN+14 49) SIGRTMIN+15 50) SIGRTMAX-14 51) SIGRTMAX-13 52) SIGRTMAX-12
53) SIGRTMAX-11 54) SIGRTMAX-10 55) SIGRTMAX-9  56) SIGRTMAX-8  57) SIGRTMAX-7
58) SIGRTMAX-6  59) SIGRTMAX-5  60) SIGRTMAX-4  61) SIGRTMAX-3  62) SIGRTMAX-2
63) SIGRTMAX-1  64) SIGRTMAX    


只有第9种信号(SIGKILL)才可以无条件终止进程，其他信号进程都有权利忽略。    下面是常用的信号：
HUP    1    终端断线
INT     2    中断（同 Ctrl + C）
QUIT    3    退出（同 Ctrl + \）
TERM   15    终止
KILL    9    强制终止
CONT   18    继续（与STOP相反， fg/bg命令）
STOP    19    暂停（同 Ctrl + Z）
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;实例2：先用ps查找进程，然后用kill杀掉&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;*kill 3268*&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;实例3：彻底杀死进程&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;*kill -9 223*&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;实例4：杀死指定用户所有进程&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;kill -9 $(ps -ef | grep peidalinux)&lt;/code&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;kill -u peidalinux&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;实例5：init进程是不可杀的&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;kill -9 1&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;[root@localhost ~]# ps -ef|grep init
root         1     0  0 Nov02 ?        00:00:00 init [3]                  
root     17563 17534  0 17:37 pts/1    00:00:00 grep init
[root@localhost ~]# kill -9 1
[root@localhost ~]# kill -HUP 1
[root@localhost ~]# ps -ef|grep init
root         1     0  0 Nov02 ?        00:00:00 init [3]                  
root     17565 17534  0 17:38 pts/1    00:00:00 grep init
[root@localhost ~]# kill -KILL 1
[root@localhost ~]# ps -ef|grep init
root         1     0  0 Nov02 ?        00:00:00 init [3]                  
root     17567 17534  0 17:38 pts/1    00:00:00 grep init
[root@localhost ~]#
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;现在我们要杀死一个tcp_server.php 的重复进程&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;chen@chen-pc:/var/www/html/test/swoole$ `kill 7974`
chen@chen-pc:/var/www/html/test/swoole$ ps auxf | grep php
root      1069  0.0  0.2 317444 28224 ?        Ss   09:59   0:00 php-fpm: master process (/etc/php5/fpm/php-fpm.conf)
www-data  1115  0.0  0.0 317444  8860 ?        S    09:59   0:00  \_ php-fpm: pool www
www-data  1116  0.0  0.0 317444  8860 ?        S    09:59   0:00  \_ php-fpm: pool www
chen     15469  0.0  0.0  14464  2224 pts/1    S+   11:41   0:00      \_ grep php
chen      7957  0.0  0.1 595384 10916 ?        Ssl  10:44   0:00 php5 -f tcp_server.php
chen      7958  0.0  0.1 299436 10104 ?        S    10:44   0:00  \_ php5 -f tcp_server.php
chen      7963  0.0  0.1 285640 10392 ?        S    10:44   0:00      \_ php5 -f tcp_server.php
chen      7964  0.0  0.1 285640 10392 ?        S    10:44   0:00      \_ php5 -f tcp_server.php
chen      7965  0.0  0.1 285640 10392 ?        S    10:44   0:00      \_ php5 -f tcp_server.php
chen      7966  0.0  0.1 285640 10392 ?        S    10:44   0:00      \_ php5 -f tcp_server.php
chen      7967  0.0  0.1 285640 10392 ?        S    10:44   0:00      \_ php5 -f tcp_server.php
chen      7968  0.0  0.1 285640 12980 ?        S    10:44   0:00      \_ php5 -f tcp_server.php
chen      7969  0.0  0.1 285640 10392 ?        S    10:44   0:00      \_ php5 -f tcp_server.php
chen      7970  0.0  0.1 285640 10396 ?        S    10:44   0:00      \_ php5 -f tcp_server.php

&lt;/div&gt;

</description>
        <pubDate>Sun, 18 Dec 2016 00:00:00 +0800</pubDate>
        <link>https://chenyingqiao.github.io//2016/12/18/linux-ps%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86%E5%91%BD%E4%BB%A4/</link>
        <guid isPermaLink="true">https://chenyingqiao.github.io//2016/12/18/linux-ps%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86%E5%91%BD%E4%BB%A4/</guid>
        
        <category>server</category>
        
        
      </item>
    
      <item>
        <title>Phero数据库查询</title>
        <description>&lt;h2 id=&quot;docker&quot;&gt;docker创建环境&lt;/h2&gt;

&lt;h3 id=&quot;dockermysql&quot;&gt;使用docker创建两个mysql容器&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;docker 镜像可以使用网易蜂巢的mysql的docker镜像
MYSQL_ROOT_PASSWORD是设置docker容器中mysql的root账户的密码&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;docker run --name mysql-master -v /home/docker/file/:/home/ -e &lt;span class=&quot;nv&quot;&gt;MYSQL_ROOT_PASSWORD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;111111 -d mysql
docker run --name mysql-slave -v /home/docker/file/:/home/ -e &lt;span class=&quot;nv&quot;&gt;MYSQL_ROOT_PASSWORD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;111111 -d mysql
&lt;span class=&quot;c&quot;&gt;#这里一般都要挂载一下外部目录这样docker才能和外部机器共享文件&lt;/span&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section&quot;&gt;今日容器之后需要准备的事情&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;由于镜像中没有提供vim 而且 镜像中的源是使用ubuntu的官方源 
如果我们没有使用科学上网apt-get update 将会非常慢
我使用的是deepin 我就吧deepin的源替换进去&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;# 拷贝deepin的源
sudo cp /etc/apt/source.list /home/docker/file/
#进入容器
docker exec -it mysql-master bash
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;# 进入容器之后 我们从共享的文件目录获取deepin的源 然后覆盖到容器中的源
cat /home/source.list &amp;gt; /etc/apt/source.list
apt-get update
apt-get upgrade
apt-get install vim
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;mysql-slave 也是同样的更新一下源&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;mysql&quot;&gt;开始配置mysql主从&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;每台mysql主机都有master和slave的概念
其实他是两个工作线程&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;将Mysql的数据分布到多个系统上去，这种分布的机制，是通过将Mysql的某一台主机的数据复制到其&amp;gt;它主机（slaves）上，并重新执行一遍来实现的。复制过程中一个服务器充当主服务器，而一个或多个其它服务器充当从服务器。主服务器将更新写入二进制日志文件，并维护文件的一个索引以跟踪日志循环。这些日志可以记录发送到从服务器的更新。当一个从服务器连接主服务器时，它通知主服务器从服务器在日志中读取的最后一次成功更新的位置。从服务器接收从那时起发生的任何更新，然后封锁并等待主服务器通知新的更新。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;请注意当你进行复制时，所有对复制中的表的更新必须在主服务器上进行。否则，你必须要小心，以避免用户对主服务器上的表进行的更新与对从服务器上的表所进行的更新之间的冲突。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;复制过程有一个很重要的限制——复制在slave上是串行化的，也就是说master上的并行更新操作不能在slave上并行操作。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;section-1&quot;&gt;从添加用户开始&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;我们需要添加一个mysql用户让slave来使用&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;mysql-master 容器&lt;/strong&gt;
```shell
mysql -u root -p
#输入密码后进入mysql&lt;/p&gt;

&lt;p&gt;#创建一个用户名为lerko密码为111111的可以使用任意ip访问的用户
create user  ‘lerko’@’%’ IDENTIFIED BY ‘111111’;&lt;/p&gt;

&lt;h1 id=&quot;curd&quot;&gt;为用户开启curd权限&lt;/h1&gt;
&lt;p&gt;# 如果没有开启的话会导致 Slave_IO_Running :no
# 权限有select,insert,update,delete,create,drop, all privilege[表示给所有的权限]
#命令格式: &lt;code class=&quot;highlighter-rouge&quot;&gt;grant 权限1,权限2,…权限n on 数据库名称.表名称 to 用户名@用户地址 identified by ‘连接口令’;&lt;/code&gt;
grant select,insert,update,delete,create,drop on &lt;em&gt;.&lt;/em&gt; to lerko@’%’ identified by ‘111111’;
```&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;另外如果你没有开启权限就吧从库链接主库了
你要重新链接一次 因为主库的Position会变化
重新链接要使用stop slave结束丛库的slave&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;section-2&quot;&gt;开启主和从服务器的二进制日志&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;mysql-master&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;# 修改mysql的配置文件开启二进制日志
vim /etc/mysql/my.cnf
#添加如下内容
[mysqld]
log-bin=mysql-bin   //[必须]启用二进制日志
server-id=1      //[必须]服务器唯一ID，默认是1，一般取IP最后一段
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;mysql-slave&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;# 修改mysql的配置文件开启二进制日志
vim /etc/mysql/my.cnf
#添加如下内容
[mysqld]
log-bin=mysql-bin   //[必须]启用二进制日志
server-id=1      //[必须]服务器唯一ID，默认是1，一般取IP最后一段
&lt;/div&gt;

&lt;h3 id=&quot;mysql-1&quot;&gt;重启两个容器的mysql进程&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;这个会直接吧容器给停了  之后再start一下容器就行&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;service mysql restart;
&lt;/div&gt;

&lt;h3 id=&quot;masterslave&quot;&gt;查看主库的master以及从库的slave&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;进入mysql&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;show master status；
&lt;/div&gt;

&lt;p&gt;+——————+———-+————–+——————+——————-+
| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |
+——————+———-+————–+——————+——————-+
| mysql-bin.000001 |      681 |              |                  |                   |
+——————+———-+————–+——————+——————-+&lt;/p&gt;

&lt;h3 id=&quot;master&quot;&gt;从库把master链接到主库&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;这里我们只需要一个命令就可以&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;# master_log_file =&amp;gt; 指向胡二进制文件
# master_log_pos =&amp;gt; 二进制文件胡读取位置
change master to master_host=&#39;172.17.0.2&#39;,master_user=&#39;lerko&#39;,master_password=&#39;111111&#39;,master_log_file=&#39;mysql-bin.000001&#39;,master_log_pos=681;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;主从ip可以使用&lt;code class=&quot;highlighter-rouge&quot;&gt;docker inspect [容器id]&lt;/code&gt;来查看&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;section-3&quot;&gt;去从服务器查看同步状态&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;# 进入mysql命令行
show slave status\G

*************************** 1. row ***************************
               Slave_IO_State: Waiting for master to send event
                  Master_Host: 172.17.0.2
                  Master_User: lerko
                  Master_Port: 3306
                Connect_Retry: 60
              Master_Log_File: mysql-bin.000001
          Read_Master_Log_Pos: 1045
               Relay_Log_File: 68903b92c3ea-relay-bin.000003
                Relay_Log_Pos: 320
        Relay_Master_Log_File: mysql-bin.000001
             Slave_IO_Running: Yes [这个必须要yes]
            Slave_SQL_Running: Yes [这个必须要yes]
              Replicate_Do_DB: 
          Replicate_Ignore_DB: 
           Replicate_Do_Table: 
       Replicate_Ignore_Table: 
      Replicate_Wild_Do_Table: 
  Replicate_Wild_Ignore_Table: 
                   Last_Errno: 0
                   Last_Error: 
                 Skip_Counter: 0
          Exec_Master_Log_Pos: 1045
              Relay_Log_Space: 534
              Until_Condition: None
               Until_Log_File: 
                Until_Log_Pos: 0
           Master_SSL_Allowed: No
           Master_SSL_CA_File: 
           Master_SSL_CA_Path: 
              Master_SSL_Cert: 
            Master_SSL_Cipher: 
               Master_SSL_Key: 
        Seconds_Behind_Master: 0 [这个可以查看主从是否延迟]
Master_SSL_Verify_Server_Cert: No
                Last_IO_Errno: 0
                Last_IO_Error: 
               Last_SQL_Errno: 0
               Last_SQL_Error: 
  Replicate_Ignore_Server_Ids: 
             Master_Server_Id: 1
                  Master_UUID: 38487393-c72a-11e6-a1c8-0242ac110002
             Master_Info_File: /var/lib/mysql/master.info
                    SQL_Delay: 0
          SQL_Remaining_Delay: NULL
      Slave_SQL_Running_State: Slave has read all relay log; waiting for more updates
           Master_Retry_Count: 86400
                  Master_Bind: 
      Last_IO_Error_Timestamp: 
     Last_SQL_Error_Timestamp: 
               Master_SSL_Crl: 
           Master_SSL_Crlpath: 
           Retrieved_Gtid_Set: 
            Executed_Gtid_Set: 
                Auto_Position: 0
         Replicate_Rewrite_DB: 
                 Channel_Name: 
           Master_TLS_Version: 
1 row in set (0.00 sec)

ERROR: 
No query specified

&lt;/div&gt;

</description>
        <pubDate>Thu, 15 Dec 2016 00:00:00 +0800</pubDate>
        <link>https://chenyingqiao.github.io//2016/12/15/hah/</link>
        <guid isPermaLink="true">https://chenyingqiao.github.io//2016/12/15/hah/</guid>
        
        <category>Phero</category>
        
        
      </item>
    
      <item>
        <title>Phero数据库查询</title>
        <description>&lt;h2 id=&quot;section&quot;&gt;安装&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;git安装 &lt;code class=&quot;highlighter-rouge&quot;&gt;git clone https://github.com/chenyingqiao/Phero.git&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;composer 安装 &lt;code class=&quot;highlighter-rouge&quot;&gt;composer require lerko/p-hero&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;section-1&quot;&gt;开始&lt;/h2&gt;

&lt;h3 id=&quot;pdo&quot;&gt;在入口脚本注入PDO&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;方法1&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;use Phero\System\DI;
use Phero\Database as database;

$config[]=&quot;mysql:host=localhost;dbname=video;charset=utf8&quot;;//链接字符串
$config[]=&quot;root&quot;;//用户名
$config[]=&quot;Cyq19931115&quot;;//密码
DI::inj(database\Enum\DatabaseConfig::DatabaseConnect,$config);//注入
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;方法2&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;use Phero\System\DI;
use Phero\Database as database;

$dns = &quot;mysql:host=localhost;dbname=video;charset=utf8&quot;;
DI::inj(database\Enum\DatabaseConfig::pdo_instance, new Phero\Database\PDO($dns, &#39;root&#39;, &#39;Cyq19931115&#39;));
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;接下来就可以建立实体类 然后愉快的使用了&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;sql&quot;&gt;直接执行sql语句&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;exec(sql,bindData) 插入数据&lt;/li&gt;
  &lt;li&gt;query(sql,bindData) 读取数据&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;$help=new database\Realize\MysqlDbHelp();
$data=$help-&amp;gt;query(&quot;select * from video_cat where id=:id &quot;,[&quot;id&quot;,1]);
$effect=$help-&amp;gt;exec(&quot;update video_cat set id=:id where name=:name&quot;,[
    [&#39;id&#39;,1],
    [&#39;name&#39;,&#39;视频&#39;]
]);
&lt;/div&gt;

&lt;h3 id=&quot;section-2&quot;&gt;新建实体类&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;现在我们有几张表（都要&lt;code class=&quot;highlighter-rouge&quot;&gt;use DbUnit&lt;/code&gt;）&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;video_cat&lt;/code&gt;表  &lt;code class=&quot;highlighter-rouge&quot;&gt;(视频种类表)&lt;/code&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Field&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Type&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Null&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Key&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Default&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;Extra&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;id&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;int(11)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NO&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;PRI&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NULL&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;auto_increment&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;name&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;varchar(255)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;YES&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NULL&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;blockquote&gt;
  &lt;p&gt;实体&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;namespace PheroTest\DatabaseTest\Unit;
use Phero\Database\DbUnit;

/**
 * @Table[alias=cat]
 */
class video_cat {
    use DbUnit;
    /**
     * [$id description]
     * @var [type]
     * @Field[alias=cat_id]
     */
    public $id;
    /**
     * [$name description]
     * @var [type]
     * @Field[alias=cat_name]
     */
    public $name;
}
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;video_user&lt;/code&gt;表   &lt;code class=&quot;highlighter-rouge&quot;&gt;(用户表)&lt;/code&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Field&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Type&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Null&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Key&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Default&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;Extra&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;uid&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;int(11)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NO&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;PRI&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NULL&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;auto_increment&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;username&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;varchar(255)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;YES&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NULL&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;password&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;varchar(255)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;YES&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NULL&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;blockquote&gt;
  &lt;p&gt;实体&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;namespace PheroTest\DatabaseTest\Unit;

use Phero\Database\DbUnit;

/**
 * @Table[alias=cd]
 */
class video_user {
    use DbUnit;
    /**
     * @Primary
     * @DbType[type=int]
     * @var [type]
     */
    public $uid;
    /**
     * @DbType[type=string]
     * @var [type]
     */
    public $username;
    /**
     * @DbType[type=string]
     * @var [type]
     */
    public $password;
}
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;video_course&lt;/code&gt;表  &lt;code class=&quot;highlighter-rouge&quot;&gt;(视频课程表)&lt;/code&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Field&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Type&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Null&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Key&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Default&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;Extra&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;course_id&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;int(11)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NO&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;PRI&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NULL&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;auto_increment&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;name&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;varchar(255)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NO&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NULL&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;anthor&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;varchar(255)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NO&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NULL&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;cat_id&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;int(11)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NO&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NULL&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;direction_id&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;int(11)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NO&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NULL&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;difficulty_id&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;int(11)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NO&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NULL&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;intreduce&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;text&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NO&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NULL&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;video_path&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;varchar(255)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NO&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NULL&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;cover&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;varchar(255)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NO&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NULL&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;create_time&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;int(11)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;YES&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NULL&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;update_time&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;int(11)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;YES&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NULL&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;blockquote&gt;
  &lt;p&gt;实体&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;namespace PheroTest\DatabaseTest\Unit;
use Phero\Database\DbUnit;

/**
 * @Table[alias=course]
 */
class video_course {
    use DbUnit;

    public $course_id;
    public $name;
    public $anthor;
    public $cat_id;
    public $direction_id;
    public $difficulty_id;
    public $intreduce;
    public $video_path;
    public $cover;
    public $create_time;
    public $update_time;
}
&lt;/div&gt;

&lt;h3 id=&quot;section-3&quot;&gt;注解&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;用法&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;参数&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;@Table[alias=###]&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;表别名&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;@Field[alias=###,type=[string,int]]&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;列的别名,列的类型&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;section-4&quot;&gt;查询&lt;/h2&gt;

&lt;h3 id=&quot;videocat&quot;&gt;查询所有列video_cat表中的列&lt;/h3&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;$video_cat=new video_cat();
$video_user-&amp;gt;select();//value就是video_cat查询出来的结果
&lt;/div&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;span class=&quot;err&quot;&gt;相当于&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;video_user&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cat&lt;/span&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-5&quot;&gt;查询表中的部分列&lt;/h3&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;$video_cat=new video_cat([&#39;id&#39;,&#39;name&#39;]);  //===&amp;gt;可以输入要的列
$value=$video_user-&amp;gt;select();
&lt;/div&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;span class=&quot;err&quot;&gt;相当于&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;from&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;video_user&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;

&lt;h3 id=&quot;where&quot;&gt;条件查询(where)&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;简单的where&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;    $video_user=new test\video_user([&quot;uid&quot;,&quot;username&quot;]);
    $video_user-&amp;gt;order(&#39;uid&#39;,database\Enum\OrderType::desc);
    $video_user-&amp;gt;whereOrEqGroupStart(&quot;uid&quot;, 4)-&amp;gt;whereInGroupEnd(&quot;uid&quot;, [2, 3, 1]);
    $video_user-&amp;gt;group(&quot;password&quot;);
    $video_user-&amp;gt;having([&quot;password&quot;,&quot;many_test&quot;]);
    $video_user-&amp;gt;select();
&lt;/div&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;span class=&quot;err&quot;&gt;相当于&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;from&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;video_user&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;where&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uid&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;having&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;many_test&#39;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;by&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uid&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;desc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;条件查询的组合&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;1. where\[Eq,Neq,In,Not_in,Between,Like,Lt,Lr,Gt,Ge\]([列],[值])
2. whereAnd\[Eq,Neq,In,Not_in,Between,Like,Lt,Lr,Gt,Ge\]([列],[值])
3. whereOr\[Eq,Neq,In,Not_in,Between,Like,Lt,Lr,Gt,Ge\]([列],[值])
&lt;/div&gt;

&lt;h3 id=&quot;section-6&quot;&gt;关联查询&lt;/h3&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;$video_cat=new video_cat();
/**
 * $.id=#.cat_id
 * 这个表达式标示两个表的联系
 * 其中
 *         $:表示 video_cat表
 *         #:表示 video_path表
 *          join可以嵌套使用
            如 A B C 三表
            A-&amp;gt;join(B);
            B-&amp;gt;join(C);
            A-&amp;gt;select(); //完成3表链接
 * @type {[type]}
 */
$video_cat-&amp;gt;join(new video_course([&#39;course_id&#39;,&#39;name&#39;,&#39;video_path&#39;]),&quot;$.id=#.cat_id&quot;);
$value=$video_cat-&amp;gt;select();
&lt;/div&gt;

&lt;h2 id=&quot;section-7&quot;&gt;插入&lt;/h2&gt;

&lt;h3 id=&quot;section-8&quot;&gt;普通插入&lt;/h3&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;//这是一种赋值方式
$video_user = new unit\video_user([&quot;username&quot; =&amp;gt; &quot;asdfs&quot; . rand(), &quot;password&quot; =&amp;gt; &quot;1234&quot; . rand()]);
//或者通过字段直接赋值
$video_user-&amp;gt;username=&quot;fuck&quot;;
$video_user-&amp;gt;password=&quot;123455&quot;;
$insert = $video_user-&amp;gt;insert();
&lt;/div&gt;

&lt;h3 id=&quot;section-9&quot;&gt;批量插入&lt;/h3&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;$video_user = new unit\video_user([&quot;username&quot; =&amp;gt; &quot;asdfs&quot; . rand(), &quot;password&quot; =&amp;gt; &quot;1234&quot; . rand()]);
 $video_user2 = new unit\video_user([&quot;username&quot; =&amp;gt; &quot;asdfs&quot; . rand(), &quot;password&quot; =&amp;gt; &quot;1234&quot; . rand()]);
//批量插入
$entiy = [$video_user, $video_user2];
$model = new Model();
$model-&amp;gt;insert($entiy);
&lt;/div&gt;

&lt;h3 id=&quot;section-10&quot;&gt;事务插入&lt;/h3&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;//这是一种赋值方式
$video_user = new unit\video_user([&quot;username&quot; =&amp;gt; &quot;asdfs&quot; . rand(), &quot;password&quot; =&amp;gt; &quot;1234&quot; . rand()]);
//或者通过字段直接赋值
$video_user-&amp;gt;username=&quot;this is fuck&quot;;
$video_user-&amp;gt;password=&quot;123455&quot;;
//true表示开启事务
$insert = $video_user-&amp;gt;insert(true);
//提交事务
$video_user-&amp;gt;commit();
&lt;/div&gt;

&lt;h2 id=&quot;section-11&quot;&gt;更新&lt;/h2&gt;

&lt;h3 id=&quot;section-12&quot;&gt;普通更新&lt;/h3&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;$video_user = new unit\video_user([&quot;username&quot; =&amp;gt; &quot;asdfs&quot;, &quot;password&quot; =&amp;gt; &quot;1234&quot;]);
$video_user-&amp;gt;where([&#39;uid&#39;, 4]);
$update = $video_user-&amp;gt;update();
&lt;/div&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;span class=&quot;err&quot;&gt;相当于&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;update&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;video_user&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;asdfs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1234&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;where&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;

&lt;h1 id=&quot;section-13&quot;&gt;删除&lt;/h1&gt;

&lt;h3 id=&quot;section-14&quot;&gt;普通删除&lt;/h3&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;$video_user = new unit\video_user();
$video_user-&amp;gt;whereEq(&quot;uid&quot;,4);
$video_user-&amp;gt;delete();
&lt;/div&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;span class=&quot;err&quot;&gt;相当于&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;delete&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;video_user&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/div&gt;

&lt;h1 id=&quot;section-15&quot;&gt;实例测试文件&lt;/h1&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;require_once&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;vendor/autoload.php&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PheroTest\DatabaseTest\Unit&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;unit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Phero\System\DI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Phero\Database&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;sd&quot;&gt;/**
 * 注入pdo实例【没有注入将无法使用】
 * @var string
 */&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$dns&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;mysql:host=localhost;dbname=video;charset=utf8&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;root&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Cyq19931115&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;DI&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;inj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;database\Enum\DatabaseConfig&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;DatabaseConnect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//DI::inj(database\Enum\DatabaseConfig::pdo_instance, new Phero\Database\PDO($dns, &#39;root&#39;, &#39;Cyq19931115&#39;));
&lt;/span&gt;

&lt;span class=&quot;sd&quot;&gt;/******************************************
 * 测试普通单个查询
 * @var video_user
 *****************************************/&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$video_user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;unit\video_user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//$video_user-&amp;gt;group(&quot;uid&quot;);
//$video_user-&amp;gt;limit(2, 5);
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$video_user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;uid&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;database\Enum\OrderType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;desc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$video_user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;password&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$video_user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;having&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;password&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;many_test&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//$video_user-&amp;gt;fieldTemp([&#39;username&#39; =&amp;gt; &quot;SUBSTRING(? FROM 2) as subUsername&quot;, &#39;password&#39; =&amp;gt; &quot;SUBSTRING(? FROM 2) as subPassword&quot;]);
//// 设置列模板之后原来的列就会消失-----要如下手动添加
//$video_user-&amp;gt;field([&quot;username&quot;, &quot;password&quot;]);
//$video_user-&amp;gt;field(&quot;count(case when username=&#39;ying&#39; then username end) as &#39;asdf&#39;&quot;);
//$video_user-&amp;gt;BIN(&quot;password&quot;);
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$video_user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;whereOrEqGroupStart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;uid&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;whereInGroupEnd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;uid&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$video_user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//$user = $video_user-&amp;gt;find();
&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;var_dump&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$video_user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;dumpSql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;sd&quot;&gt;/******************************************
 * 测试内外链接
 * @var video_user
 *****************************************/&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$video_cat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;unit\video_cat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;id&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;name&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//===&amp;gt;可以输入要的列
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$video_course&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;unit\video_course&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;course_id&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;name&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;video_path&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;difficulty_id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$video_cat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$video_course&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;$.id=#.cat_id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$video_course&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;unit\video_difficulty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;id&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;name&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;$.difficulty_id=#.id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$video_cat_join_course&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$video_cat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;var_dump&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$video_cat_join_course&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$video_cat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;dumpSql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;var_dump&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$video_cat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;

&lt;span class=&quot;sd&quot;&gt;/******************************************
 * 测试删除
 * @var video_user
 *****************************************/&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$video_user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;video_user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$video_user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;uid&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;var_dump&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$video_user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;

&lt;span class=&quot;sd&quot;&gt;/******************************************
 * 测试插入
 * @var video_user
 *****************************************/&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$video_user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;unit\video_user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;username&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;asdfs&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;rand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;password&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;1234&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;rand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()]);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$video_user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;this is fuck&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$video_user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;123455&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//true表示开启事务
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$insert&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$video_user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;insert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;//嵌套事务
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$insert&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$video_user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;insert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$video_user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;commit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;//嵌套事务
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$video_user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;commit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;var_dump&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$video_user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$video_user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;dumpSql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;var_dump&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$insert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;sd&quot;&gt;/******************************************
 * 测试数据更新
 * @var video_user
 *****************************************/&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$video_user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;unit\video_user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;username&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;asdfs&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;rand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;password&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;1234&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;rand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()]);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$video_user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;uid&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$update&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$video_user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;var_dump&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;var_dump&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$video_user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;

&lt;span class=&quot;sd&quot;&gt;/******************************************
 *测试数据替换
 * @var video_user
 *****************************************/&lt;/span&gt;
 &lt;span class=&quot;nv&quot;&gt;$video_user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;unit\video_user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;username&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;asdfs&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;rand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;password&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;1234&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;rand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()]);&lt;/span&gt;
 &lt;span class=&quot;nv&quot;&gt;$video_user2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;unit\video_user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;username&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;asdfs&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;rand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;password&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;1234&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;rand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()]);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//批量插入
&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$entiy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$video_user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$video_user2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
 &lt;span class=&quot;nv&quot;&gt;$model&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
 &lt;span class=&quot;nv&quot;&gt;$model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;insert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$entiy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;nb&quot;&gt;var_dump&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//ORM 插入
&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$video_user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
 &lt;span class=&quot;nb&quot;&gt;var_dump&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;sd&quot;&gt;/******************************************
 *依赖注入测试
 * @var video_user
 *****************************************/&lt;/span&gt;
 &lt;span class=&quot;nv&quot;&gt;$injectTest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;InjectTest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
 &lt;span class=&quot;nb&quot;&gt;var_dump&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$injectTest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;sd&quot;&gt;/******************************************
 *手动设置数据源测试
 * @var video_user
 *****************************************/&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$video_cat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;unit\video_cat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;id&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;name&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//===&amp;gt;可以输入要的列
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$video_cat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;course.id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$video_cat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;datasourse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;(select * from video_course)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;course&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;#.cat_id=$.id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$video_cat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;var_dump&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$video_cat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;dumpSql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$video_cat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fetchSql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;/div&gt;
</description>
        <pubDate>Thu, 15 Dec 2016 00:00:00 +0800</pubDate>
        <link>https://chenyingqiao.github.io//2016/12/15/pherodocs/</link>
        <guid isPermaLink="true">https://chenyingqiao.github.io//2016/12/15/pherodocs/</guid>
        
        <category>Phero</category>
        
        
      </item>
    
      <item>
        <title>docker入门</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;是时候用docker部署开发环境了 （ngixn apache ubuntu mysql memcache 。。。一应俱全）&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;docker&quot;&gt;docker的一些相关概念&lt;/h2&gt;

&lt;p&gt;镜像&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;docker images 查看&lt;/li&gt;
  &lt;li&gt;docker rmi &lt;镜像id&gt; 删除镜像&lt;/镜像id&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;容器&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;docker ps 查看所有容器&lt;/li&gt;
  &lt;li&gt;docker rm &lt;容器id&gt; 删除容器&lt;/容器id&gt;&lt;/li&gt;
  &lt;li&gt;docker exec &lt;容器id&gt; 在容器中执行shell命令&lt;/容器id&gt;&lt;/li&gt;
  &lt;li&gt;docker restart &lt;容器id&gt; 重启容器&lt;/容器id&gt;&lt;/li&gt;
  &lt;li&gt;docker stop &lt;容器id&gt; 停止容器&lt;/容器id&gt;&lt;/li&gt;
  &lt;li&gt;docker kill &lt;容器id&gt; 强行杀死容器进程（一个容器一个进程）&lt;/容器id&gt;&lt;/li&gt;
  &lt;li&gt;docker start &lt;容器id&gt; 开始一个容器&lt;/容器id&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;远程仓库&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;类似网易蜂巢这种就是一个远程的镜像仓库&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;docker-1&quot;&gt;运行第一个docker容器&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;我们从网易蜂巢下载镜像&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;//https://c.163.com/hub#/m/repository/?repoId&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;3096
docker pull hub.c.163.com/library/busybox:latest
&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;然后运行镜像（运行一个交互的shell） –关闭后自动退出&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;span class=&quot;c&quot;&gt;# -i Keep STDIN open even if not attached（交互式的）&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# -t Allocate a pseudo-TTY（有终端）&lt;/span&gt;
sudo docker run -i -t ubuntu /bin/bash
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;运行一个长期运行的实例&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;span class=&quot;c&quot;&gt;# 开始一个长时间运行的docker实例 运行的是后面的那条shell&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;JOB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;sudo docker run -d ubuntu /bin/sh -c &lt;span class=&quot;s2&quot;&gt;&quot;while true; do echo Hello world; sleep 1; done&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Collect（收集） the output of the job so far  这里的$JoB也可以是容器的id&lt;/span&gt;
sudo docker logs &lt;span class=&quot;nv&quot;&gt;$JOB&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Kill the job&lt;/span&gt;
sudo docker &lt;span class=&quot;nb&quot;&gt;kill&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$JOB&lt;/span&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;运行一个ssh 用主机链接&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;docker 的commit标示的是提交当前的状态 不然如果容器停止了就会恢复到原来的情况&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;span class=&quot;c&quot;&gt;# -d, --detach Run container in background and print container ID（保持后台守护运行）&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# -p, --publish=[] Publish a container&#39;s port(s) to the host(分配端口)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Hello! We are going to try and install openssh on a container and run it as a service&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# let&#39;s pull ubuntu to get a base ubuntu image.&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;docker pull ubuntu
&lt;span class=&quot;c&quot;&gt;# I had it so it was quick&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# now let&#39;s connect using -i for interactive and with -t for terminal&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# we execute /bin/bash to get a prompt.&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;docker run -i -t ubuntu /bin/bash
&lt;span class=&quot;c&quot;&gt;# yes! we are in!&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# now lets install openssh&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;apt-get update
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;apt-get install openssh-server
&lt;span class=&quot;c&quot;&gt;# ok. lets see if we can run it.&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;which sshd
&lt;span class=&quot;c&quot;&gt;# we need to create privilege separation directory&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;mkdir /var/run/sshd
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;/usr/sbin/sshd
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# now let&#39;s commit it&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# which container was it?&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;docker ps -a |more
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;docker commit a30a3a2f2b130749995f5902f079dc6ad31ea0621fac595128ec59c6da07feea dhrp/sshd
&lt;span class=&quot;c&quot;&gt;# I gave the name dhrp/sshd for the container&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# now we can run it again 这里表示的是吧sshd这个程序以守护进程的方式运行&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 如果不是守护进程的话如果ubuntu这个镜像没有程序运行，docker的容器就会退出进入停止状态&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;docker run -d dhrp/sshd /usr/sbin/sshd -D &lt;span class=&quot;c&quot;&gt;# D for daemon mode&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# is it running?&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;docker ps
&lt;span class=&quot;c&quot;&gt;# yes!&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# let&#39;s stop it&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;docker stop 0ebf7cec294755399d063f4b1627980d4cbff7d999f0bc82b59c300f8536a562
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;docker ps
&lt;span class=&quot;c&quot;&gt;# and reconnect, but now open a port to it&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;docker run -d -p 22 dhrp/sshd /usr/sbin/sshd -D
&lt;span class=&quot;c&quot;&gt;# 这里 port List port mappings or a specific mapping for the CONTAINER&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 标示端口列表映射或者一个特殊的端口映射到容器&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;docker port b2b407cf22cf8e7fa3736fa8852713571074536b1d31def3fdfcd9fa4fd8c8c5 22
&lt;span class=&quot;c&quot;&gt;# it has now given us a port to connect to&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# we have to connect using a public ip of our host&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;hostname
&lt;span class=&quot;c&quot;&gt;# *ifconfig* is deprecated, better use *ip addr show* now&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;ifconfig
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;ssh root@192.168.33.10 -p 49153
&lt;span class=&quot;c&quot;&gt;# Ah! forgot to set root passwd&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;docker commit b2b407cf22cf8e7fa3736fa8852713571074536b1d31def3fdfcd9fa4fd8c8c5 dhrp/sshd
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;docker ps -a
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;docker run -i -t dhrp/sshd /bin/bash
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;passwd
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;docker commit 9e863f0ca0af31c8b951048ba87641d67c382d08d655c2e4879c51410e0fedc1 dhrp/sshd
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;docker run -d -p 22 dhrp/sshd /usr/sbin/sshd -D
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;docker port a0aaa9558c90cf5c7782648df904a82365ebacce523e4acc085ac1213bfe2206 22
&lt;span class=&quot;c&quot;&gt;# *ifconfig* is deprecated, better use *ip addr show* now&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;ifconfig
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;ssh root@192.168.33.10 -p 49154
&lt;span class=&quot;c&quot;&gt;# Thanks for watching, Thatcher thatcher@dotcloud.com&lt;/span&gt;
&lt;/div&gt;

&lt;h2 id=&quot;docker-&quot;&gt;docker 导入导出&lt;/h2&gt;

&lt;p&gt;导出&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;sudo docker ps -a
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS                    PORTS               NAMES
7691a814370e        ubuntu:14.04        &lt;span class=&quot;s2&quot;&gt;&quot;/bin/bash&quot;&lt;/span&gt;         36 hours ago        Exited &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 21 hours ago                       &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;sudo docker &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;7691a814370e &amp;gt; ubuntu.tar
&lt;/div&gt;

&lt;p&gt;导入&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;cat ubuntu.tar | sudo docker import - &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/ubuntu:v1.0
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;sudo docker images
REPOSITORY          TAG                 IMAGE ID            CREATED              VIRTUAL SIZE
&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;/ubuntu         v1.0                9d37a6082e97        About a minute ago   171.3 MB
&lt;/div&gt;

&lt;h2 id=&quot;docker-2&quot;&gt;如何进入docker容器&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;刚开始使用docker的时候我完全不知道退出docker容器的命令行之后怎么和docker容器交互
于是找到了一个命令 &lt;code class=&quot;highlighter-rouge&quot;&gt;docker exec&lt;/code&gt;
这个就是进入docker容器的一个途径
比如我们run一个ubuntu的bash
&lt;code class=&quot;highlighter-rouge&quot;&gt;docker run -itd ubuntu：laster /bin/bash &lt;/code&gt;
然后我们可以在&lt;code class=&quot;highlighter-rouge&quot;&gt;docker ps&lt;/code&gt;中找到这个容器
我们就可以这样进入容器的命令行&lt;code class=&quot;highlighter-rouge&quot;&gt;docker exec -it &amp;lt;容器的id或者别名&amp;gt; /bin/bash&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;docker-3&quot;&gt;docker中网络的配置&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;当docker运行的时候会产生一个docker0的网络节点
我们在使用docker run创建Docker容器时，可以用–net选项指定容器的网络模式，Docker有以下4种网络模式：
host模式，使用–net=host指定。
container模式，使用–net=container:NAME_or_ID指定。
none模式，使用–net=none指定。
bridge模式，使用–net=bridge指定，默认设置。
默认选择bridge。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;docker network inspect bridge&lt;/code&gt;可以查看当前桥接网络容器的ip状态&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;section&quot;&gt;关于镜像的构成&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://yeasy.gitbooks.io/docker_practice/content/image/commit.html&quot;&gt;参考文章：利用 commit 理解镜像构成&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;当我们run一个镜像 之后对镜像进行操作 会对文件造成更改
我们可以用&lt;code class=&quot;highlighter-rouge&quot;&gt;docker diff &amp;lt;容器id或者别名&amp;gt;&lt;/code&gt;
commit 之后就会产生一个新的镜像
&lt;code class=&quot;highlighter-rouge&quot;&gt;docker images&lt;/code&gt;可以查看
&lt;code class=&quot;highlighter-rouge&quot;&gt;docker history &amp;lt;image的名字&amp;gt;&lt;/code&gt;可以查看镜像的提交历史
&lt;strong&gt;这里要注意&lt;/strong&gt; commit不能不推荐用来制作镜像 因为这个是一种黑盒操作
我们并不知道在我们操作之后 镜像里面发生了什么变化 
&lt;em&gt;Dockerfile&lt;/em&gt;是一种推荐的制作镜像的方法&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;dockerfile&quot;&gt;Dockerfile&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;制作镜像的推荐途径&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        <pubDate>Thu, 15 Dec 2016 00:00:00 +0800</pubDate>
        <link>https://chenyingqiao.github.io//2016/12/15/docker%E7%AC%94%E8%AE%B0/</link>
        <guid isPermaLink="true">https://chenyingqiao.github.io//2016/12/15/docker%E7%AC%94%E8%AE%B0/</guid>
        
        <category>docker</category>
        
        
      </item>
    
  </channel>
</rss>
